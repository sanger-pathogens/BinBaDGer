// Config inheritance options
params {
    generic_config_base = "https://raw.githubusercontent.com/sanger-pathogens/nextflow-commons/"
    generic_config_version = "master"
    generic_config_url = ""
}
inherit_generic_config()

//escherichia_coli,/data/pam/team230/wr7/scratch/tmp/collate_benchmarking_dataset/variant_calling_benchmark_data/references/escherichia_coli/GCF_000005845.2/GCF_000005845.2_ASM584v2_genomic.fna

manifest {
    name            = "<PROJECT>"
    author          = 'PAM Informatics'
    homePage        = 'https://gitlab.internal.sanger.ac.uk/sanger-pathogens/pipelines/<PROJECT>'
    description     = '<Description>'
    mainScript      = 'main.nf'
    nextflowVersion = '>=21.04.0'
    version         = 'v0.0.1'
    recurseSubmodules = "https://gitlab.internal.sanger.ac.uk/sanger-pathogens/pipelines/assorted-sub-workflows/-/tags/strain_mapper%2Fv1.2.4; https://gitlab.internal.sanger.ac.uk/sanger-pathogens/pipelines/nextflowtool/-/tags/v0.0.2"
}

//import IRODS_EXTRACTOR default config
/*
includeConfig "./assorted-sub-workflows/combined_input/subworkflows/combined_input.config"
includeConfig "./assorted-sub-workflows/irods_extractor/subworkflows/irods.config"
*/

params {
    // Logging options
    monochrome_logs = false

    // Output options
    outdir = "./results"
    manifest = ''
    assembly_base = '/data/pam/collections/all_the_bacteria/0.2/assembly/'
    cobs_base = '/data/pam/collections/all_the_bacteria/0.2/indexes/phylign'
    cobs_threshold = 0.8 //default
    selection_method = 'top' //options are stepwise, random, top
    sketchlib_db = '/data/pam/collections/all_the_bacteria/0.2/indexes/sketchlib/atb_sketchlib_v020.skm'
    species = ''
    samples = 1000 //set high to begin with to return all
    sketch_total_ani = true //compare all vs all vs just all vs query
    generate_tree = true //make a tree with rapidnj
    trim_tree = true //use treemer to subset this tree
    number_of_leaves = 10 //number of leaves to retain in tree
    cluster_subselection = true //use scipy to cluster into subcultures 
}

// Helper functions
def inherit_generic_config() {
    config_url = params.generic_config_url ? params.generic_config_url : "${params.generic_config_base}/${params.generic_config_version}/configs/nextflow.config"
    try {
        includeConfig "${config_url}"
    } catch (Exception e) {
        System.err.println("ERROR: Could not load generic config: ${config_url}")
        System.err.println("Encountered the following exception:")
        throw e
    }
}