// Config inheritance options
params {
    generic_config_base = "https://raw.githubusercontent.com/sanger-pathogens/nextflow-commons/"
    generic_config_version = "master"
    generic_config_url = ""
}
inherit_generic_config()

manifest {
    name            = "<PROJECT>"
    author          = 'PAM Informatics'
    homePage        = 'https://gitlab.internal.sanger.ac.uk/sanger-pathogens/pipelines/<PROJECT>'
    description     = '<Description>'
    mainScript      = 'main.nf'
    nextflowVersion = '>=21.04.0'
    version         = 'v0.0.1'
    recurseSubmodules = "https://gitlab.internal.sanger.ac.uk/sanger-pathogens/pipelines/assorted-sub-workflows/-/tags/strain_mapper%2Fv1.2.4; https://gitlab.internal.sanger.ac.uk/sanger-pathogens/pipelines/nextflowtool/-/tags/v0.0.2"
}

includeConfig "./assorted-sub-workflows/kraken2bracken/kraken2bracken.config"
includeConfig "./assorted-sub-workflows/qc/qc.config"

params {
    // Logging options
    monochrome_logs = false

    // COBS search
    manifest = ''
    cobs_base = '/data/pam/collections/all_the_bacteria/0.2/indexes/phylign'
    cobs_threshold = 0.8 //default
    selection_method = 'top' //options are stepwise, random, top
    index_prefix = '' //if you want to limit checked indexes
    number_of_cobs_matches = 100000 //set high so we return all matches will take a long time to find representatives from bins

    // Metadata
    accession_type = 'sample' //should not be changed
    publish_metadata = false
    save_pre_qc_metadata = false
    filter_manifest = ''
    short_metacsv_name = true //make a tidy metadata name
    

    // Sketching
    sketchlib_db = '/data/pam/collections/all_the_bacteria/0.2/indexes/sketchlib/atb_sketchlib_v020'

    // Bin de-replication
    bin_ranges = '0.98,0.99,0.995,0.998,1'
    retain_below_bins = false
    dereplicate_bins = true
    cluster_method = 'network_based'
    representatives = 10 //how many samples from each bin you want
    make_gif = false

    // QC
    save_fastqc = true

    // Tree building
    assembly_base = '/data/pam/collections/all_the_bacteria/0.2/assembly/'
    generate_tree = false //make a tree with rapidnj
    trim_tree = false //use treemer to subset this tree
    number_of_leaves = 10 //number of leaves to retain in tree if trimming

    // Output
    outdir = "./results"
    download_fastq = false //download fastqs so you can perform QC
    output_all_fastqs = false //output all downloaded fastqs regardless of whether they pass QC
}

// Helper functions
def inherit_generic_config() {
    config_url = params.generic_config_url ? params.generic_config_url : "${params.generic_config_base}/${params.generic_config_version}/configs/nextflow.config"
    try {
        includeConfig "${config_url}"
    } catch (Exception e) {
        System.err.println("ERROR: Could not load generic config: ${config_url}")
        System.err.println("Encountered the following exception:")
        throw e
    }
}
